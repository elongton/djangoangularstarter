version: '3.2'
services:

  angular:
    build:
      context: ./angular_src
      dockerfile: dockerdev
    # image: elongton/angular:dev
    networks:
      - frontend
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    volumes:
      - type: bind
        source: ./angular_src
        target: /usr/src/app
      - '/usr/src/app/node_modules'
    command: bash -c "ng serve --port 4200 --host 0.0.0.0 --poll 500"
    ports:
      - "4200:4200"
      - '49153:49153'


#   db:
#     image: postgres:latest
#     networks:
#       - backend
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     deploy:
#       placement:
#         constraints: [node.role == manager]
#
  django:
    build:
      context: ./django_src
      dockerfile: dockerfile
    # image: elongton/django
    networks:
      - frontend
      - backend
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000" #--settings=definetheproblem.dev_settings"
    # depends_on:
    #   - db
    volumes:
      - type: bind
        source: ./django_src
        target: /src
    ports:
      - "8000:8000"
      - "25:25"
      - "143:143"
      - "465:465"
      - "587:587"
      - "993:993"

# volumes:
#    pgdata:


networks:
  frontend:
    driver: overlay
  backend:
    driver: overlay
